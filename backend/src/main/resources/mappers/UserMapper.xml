<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tinysnow.system.mapper.UserMapper">
    <resultMap id="base" type="com.tinysnow.system.model.User">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="username" column="username" jdbcType="VARCHAR"/><!-- 用户名 -->
        <result property="password" column="password" jdbcType="VARCHAR"/><!-- 密码，加密 -->
        <result property="avatar" column="avatar" jdbcType="VARCHAR"/><!-- 头像，链接存储 -->
        <result property="email" column="email" jdbcType="VARCHAR"/><!-- 邮箱，唯一凭证 -->
        <result property="gender" column="gender" jdbcType="BIT"/><!-- 性别，默认为 1，女性 -->
        <result property="birthday" column="birthday" jdbcType="TIMESTAMP"/><!-- 生日，仅日期 -->
        <result property="registerTime" column="register_time" jdbcType="TIMESTAMP"/><!-- 注册时间 -->
    </resultMap>

    <select id="find" resultMap="base">
        select *
        from user
        where id = #{id}
    </select>

    <select id="findList" resultMap="base">
        select *
        from user
        where id = #{id}
    </select>
    <select id="findByEmail" resultType="com.tinysnow.system.model.User">
        select *
        from user
        where email = #{email}
    </select>

    <insert id="save" parameterType="com.tinysnow.system.model.User">
        insert into user (id, username, password, avatar, email, gender, birthday, register_time,)
        values (#{id}, #{username}, #{password}, #{avatar}, #{email}, #{gender}, #{birthday}, #{register_time},)
    </insert>

    <update id="update" parameterType="com.tinysnow.system.model.User">
        update user
        set where id = #{id}
    </update>

    <delete id="delete">
        delete
        from user
        where id = #{id}
    </delete>
</mapper>