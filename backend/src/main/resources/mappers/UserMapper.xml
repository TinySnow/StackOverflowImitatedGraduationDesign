<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tinysnow.system.mapper.UserMapper">
    <resultMap id="base" type="com.tinysnow.system.model.User">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="username" column="username" jdbcType="VARCHAR"/><!-- 用户名 -->
        <result property="password" column="password" jdbcType="VARCHAR"/><!-- 密码，加密 -->
        <result property="avatar" column="avatar" jdbcType="VARCHAR"/><!-- 头像，链接存储 -->
        <result property="email" column="email" jdbcType="VARCHAR"/><!-- 邮箱，唯一凭证 -->
        <result property="gender" column="gender" jdbcType="BIT"/><!-- 性别，默认为 1，女性 -->
        <result property="birthday" column="birthday" jdbcType="TIMESTAMP"/><!-- 生日，仅日期 -->
        <result property="registerTime" column="register_time" jdbcType="TIMESTAMP"/><!-- 注册时间 -->
    </resultMap>

    <resultMap id="withPoint" type="com.tinysnow.system.dto.UserDto">
        <association property="user" resultMap="base"/>
        <association property="point" resultMap="com.tinysnow.system.mapper.PointMapper.base"/>
    </resultMap>

    <sql id="columns">
        select id,
               username,
               password,
               avatar,
               email,
               gender,
               birthday,
               register_time
        from user
    </sql>

    <select id="find" resultMap="base">
        <include refid="columns"/>
        where id = #{id}
    </select>

    <select id="findList" resultMap="base">
        <include refid="columns"/>
        where id = #{id}
    </select>
    <select id="findByEmail" resultMap="base">
        <include refid="columns"/>
        where email = #{email}
    </select>
    <select id="findAll" resultMap="base">
        <include refid="columns"/>
    </select>

    <select id="findListsWithPoint" resultMap="withPoint">
        select u.*, p.*
        from user u
                 left join point p on u.id = p.id
    </select>
    <select id="getProfile" resultMap="withPoint">
        select u.*, p.point
        from user u
                 left join point p on u.id = p.id
        where u.id = #{id}
    </select>

    <insert id="save" useGeneratedKeys="true" keyProperty="id" parameterType="com.tinysnow.system.model.User">
        insert into user (username, password, avatar, email, gender, birthday, register_time)
        values (#{username}, #{password}, #{avatar}, #{email}, #{gender}, #{birthday}, #{registerTime})
    </insert>

    <update id="update" parameterType="com.tinysnow.system.model.User">
        update user
        set where id = #{id}
    </update>

    <update id="updateAvatar">
        update user
        set avatar = #{url}
        where id = #{id}
    </update>

    <update id="updateProfile" parameterType="com.tinysnow.system.model.User">
        update user
        set username = #{user.username},
            email = #{user.email},
            gender = #{user.gender},
            birthday = #{user.birthday}
        where id = #{id}
    </update>

    <delete id="delete">
        delete
        from user
        where id = #{id}
    </delete>
</mapper>