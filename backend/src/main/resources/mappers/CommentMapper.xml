<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tinysnow.system.mapper.CommentMapper">
    <resultMap id="base" type="com.tinysnow.system.model.Comment">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="question" column="question" jdbcType="VARCHAR"/><!-- 关联 question 的 id -->
        <result property="parent" column="parent"
                jdbcType="VARCHAR"/><!-- 父评论 id，关联 comment 的 id，若无则为 question 的一级评论 -->
        <result property="author" column="author" jdbcType="VARCHAR"/><!-- 关联 user 的 id -->
        <result property="content" column="content" jdbcType="LONGVARCHAR"/><!-- 内容 -->
        <result property="upvote" column="upvote" jdbcType="INTEGER"/><!-- 点赞数 -->
        <result property="devote" column="devote" jdbcType="INTEGER"/><!-- 点踩数 -->
        <result property="createdTime" column="created_time" jdbcType="TIMESTAMP"/><!-- 创建时间 -->
        <result property="updatedTime" column="updated_time" jdbcType="TIMESTAMP"/><!-- 更改时间，若无可为空 -->
        <result property="status" column="status" jdbcType="INTEGER"/><!-- 状态，是否可用 -->
    </resultMap>

    <resultMap id="withUser" type="com.tinysnow.system.dto.CommentDto">
        <association property="comment" resultMap="base" />
        <association property="userDto" resultMap="com.tinysnow.system.mapper.UserMapper.withPoint" />
    </resultMap>

    <sql id="columns">
        select id,
               question,
               parent,
               author,
               content,
               upvote,
               devote,
               created_time,
               updated_time,
               `status`
        from comment
    </sql>

    <select id="find" resultMap="base">
        <include refid="columns"/>
        where id = #{id}
    </select>

    <select id="findList" resultMap="base">
        <include refid="columns"/>
        where id = #{id}
    </select>

    <select id="findByOneColumn" resultMap="base">
        <include refid="columns" />
        where ${column} = #{value}
    </select>

    <select id="findComments" resultMap="withUser">
        SELECT COALESCE(parent, c.id) AS parent_id, c.*, u.*, p.*
        FROM comment c
        left join user u on c.author = u.id
        left join point p on p.id = u.id
        WHERE c.question = #{questionId}
        ORDER BY CAST(parent_id AS UNSIGNED), c.id;
    </select>
    <select id="findAllOfOneAuthor" resultMap="base">
        <include refid="columns"/>
        where author = #{userId}
    </select>

    <insert id="save" parameterType="com.tinysnow.system.model.Comment">
        insert into comment (id, question, parent, author, content, upvote, devote, created_time, updated_time,
                             `status`)
        values (#{id}, #{question}, #{parent}, #{author}, #{content}, #{upvote}, #{devote}, #{createdTime},
                #{updatedTime}, #{status})
    </insert>

    <update id="update" parameterType="com.tinysnow.system.model.Comment">
        update comment
        set where id = #{id}
    </update>

    <delete id="delete">
        delete
        from comment
        where id = #{id}
    </delete>
</mapper>